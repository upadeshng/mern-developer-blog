{"version":3,"sources":["redux/reducer/auth.js","redux/reducer/profile.js","redux/reducer/alert.js","redux/reducer/post.js","redux/reducer/user.js","redux/combineReducer.js","redux/action/types.js","redux/store.js","routes/protectedRoute.js","utils/setAuthToken.js","redux/action/alert.js","redux/action/auth.js","component/layout/Navbar.js","component/layout/Landing.js","component/auth/Login.js","component/DisplayValidation.js","component/auth/Register.js","redux/action/profile.js","features/profile/view/top.js","features/profile/view/about.js","features/profile/view/education.js","features/profile/view/experience.js","features/profile/view/githubRepo.js","features/profile/view/index.js","features/profile/create/index.js","features/profile/edit/index.js","features/profile/addEducation/index.js","features/profile/addExperience/index.js","features/profiles/index.js","features/posts/postListing.js","features/posts/index.js","redux/action/post.js","features/post/commentForm.js","features/post/detail.js","redux/action/user.js","features/post/commentItem.js","features/post/index.js","component/layout/Alert.js","features/dashboard/linkAction/index.js","features/dashboard/listExperience/index.js","features/dashboard/listEducation/index.js","features/dashboard/index.js","routes/index.js","App.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","loading","user","profile","posts","post","comment","combineReducers","authReducer","state","action","type","payload","setItem","removeItem","data","validationData","profileReducer","github","profileListing","education","repos","error","alertReducer","filter","alert","id","postReducer","comments","_id","userReducer","composeEnhancers","composeWithDevTools","trace","traceLimit","createStore","combineReducer","applyMiddleware","thunk","ProtectedRoute","Component","component","rest","render","props","to","setAuthToken","axios","defaults","headers","common","setAlert","msg","alertType","dispatch","uuid","setTimeout","loadUser","a","get","response","connect","auth","logout","className","href","onClick","e","Landing","login","email","password","config","body","JSON","stringify","errors","forEach","withRouter","history","useState","formData","setFormData","onChange","target","name","value","onSubmit","preventDefault","placeholder","minLength","Button","register","password2","addExperience","put","push","statusText","status","createProfile","getCurrentProfile","console","log","class","bio","skills","map","skill","index","key","src","avatar","alt","location","website","rel","social","twitter","facebook","linkedin","youtube","instagram","educationList","school","from","degree","fieldofstudy","description","experienceList","experience","company","getGithubRepo","githubusername","useEffect","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileByUserId","match","params","displaySocialInputs","toggleSocialInputs","join","addEducation","current","toDateDisabled","toggleDisableed","checked","disabled","cols","rows","propTypes","PropTypes","func","isRequired","title","handleChange","toggleDisabled","handleSubmit","getAllProfiles","text","format","date","likes","length","getAllPosts","addComment","postId","setText","getUserById","userId","deleteComment","commentId","window","confirm","delete","style","display","getPost","alerts","LinkAction","deleteExperience","deleteEducation","deleteAccount","store","exact","path","Dashboard","ProfileCreate","ProfileEdit","ProfileAddEducation","ProfileAddExperience","PostListing","Profile","Register","Login","ProfileListing","PostView","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ddd03d.chunk.js","sourcesContent":["import {\n  SIGNUP,\n  GET_TEST,\n  VALIDATION_ERROR,\n  USER_LOADED,\n  GET_AUTH,\n  AUTH_ERROR,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from '../action/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_AUTH: {\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    }\n\n    case USER_LOADED: {\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    }\n\n    case LOGIN_SUCCESS: {\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    }\n\n    case LOGIN_FAIL: {\n      // localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n\n    case REGISTER_SUCCESS: {\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    }\n\n    case REGISTER_FAIL: {\n      // localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n\n    case AUTH_ERROR: {\n      // localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n\n    case LOGOUT: {\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n\n    case SIGNUP: {\n      return {\n        ...state,\n        data: { data: 123 },\n        loading: false,\n      };\n    }\n\n    case ACCOUNT_DELETED: {\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n\n    case VALIDATION_ERROR: {\n      return {\n        ...state,\n        validationData: action.payload,\n        loading: false,\n      };\n    }\n\n    case GET_TEST: {\n      return {\n        ...state,\n        data: { data: 123 },\n        loading: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  GET_EDUCATION,\n  EDUCATION_ERROR,\n  EXPERIENCE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_ACCOUNT,\n  GET_ALL_PROFILES,\n  GET_GITHUB,\n  GITHUB_ERROR,\n  GET_ALL_POSTS,\n  POST_ERROR,\n} from '../action/types';\n\nconst initialState = {\n  loading: true,\n  profile: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GITHUB: {\n      return {\n        ...state,\n        github: action.payload,\n        loading: false,\n      };\n    }\n\n    case GITHUB_ERROR: {\n      return {\n        ...state,\n        github: null,\n        loading: false,\n      };\n    }\n\n    case GET_ALL_PROFILES: {\n      return {\n        ...state,\n        profileListing: action.payload,\n        loading: false,\n      };\n    }\n\n    case GET_EDUCATION: {\n      return {\n        ...state,\n        education: action.payload,\n        loading: false,\n      };\n    }\n\n    case GET_PROFILE: {\n      return {\n        ...state,\n        profile: action.payload,\n        loading: false,\n      };\n    }\n\n    case UPDATE_PROFILE: {\n      return {\n        ...state,\n        profile: action.payload,\n        loading: false,\n      };\n    }\n\n    case CLEAR_ACCOUNT: {\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    }\n\n    case PROFILE_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        profile: null,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { SET_ALERT, REMOVE_ALERT } from '../action/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALERT: {\n      return [...state, action.payload];\n    }\n\n    case REMOVE_ALERT: {\n      return state.filter((alert) => alert.id !== action.payload);\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  GET_POST,\n  GET_ALL_POSTS,\n  POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from '../action/types';\n\nconst initialState = {\n  loading: true,\n  posts: [],\n  post: null,\n  comment: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COMMENT: {\n      return {\n        ...state,\n        post: { ...state.post, comments: action.payload }, // whatever post is, just replace new comment\n        loading: false,\n      };\n    }\n\n    case REMOVE_COMMENT: {\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id != action.payload // for each comment, read all comment except deleted one\n          ),\n          loading: false,\n        },\n      };\n    }\n\n    case GET_ALL_POSTS: {\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n      };\n    }\n\n    case GET_POST: {\n      return {\n        ...state,\n        post: action.payload,\n        loading: false,\n      };\n    }\n\n    case POST_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { GET_USER, USER_ERROR } from '../action/types';\n\nconst initialState = {\n  user: null,\n  loading: true,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case USER_ERROR: {\n      return {\n        ...state,\n        user: null,\n        loading: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport authReducer from './reducer/auth';\nimport profileReducer from './reducer/profile';\nimport alertReducer from './reducer/alert';\nimport postReducer from './reducer/post';\nimport userReducer from './reducer/user';\n\nexport default combineReducers({\n  authReducer: authReducer,\n  profileReducer: profileReducer,\n  alertReducer: alertReducer,\n  postReducer: postReducer,\n  userReducer: userReducer,\n});\n","// export constants\nexport const SIGNUP = 'SIGNUP';\nexport const GET_TEST = 'GET_TEST';\nexport const VALIDATION_ERROR = 'VALIDATION_ERROR';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const GET_AUTH = 'GET_AUTH';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const CLEAR_ACCOUNT = 'CLEAR_ACCOUNT';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const GET_EDUCATION = 'GET_EDUCATION';\nexport const EDUCATION_ERROR = 'EDUCATION_ERROR';\nexport const GET_EXPERIENCE = 'GET_EXPERIENCE';\nexport const EXPERIENCE_ERROR = 'EXPERIENCE_ERROR';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const SET_ALERT = 'SET_ALERT';\nexport const GET_ALL_PROFILES = 'GET_ALL_PROFILES';\nexport const GET_GITHUB = 'GET_GITHUB';\nexport const GITHUB_ERROR = 'GITHUB_ERROR';\nexport const GET_POST = 'GET_POST';\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\nexport const POST_ERROR = 'POST_ERROR';\nexport const GET_USER = 'GET_USER';\nexport const USER_ERROR = 'USER_ERROR';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\nimport combineReducer from './combineReducer';\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n  traceLimit: 25,\n});\n\nexport default createStore(\n  combineReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return localStorage.getItem('token') ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/login' />\n        );\n      }}\n    />\n  );\n};\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  /* if has token then add token in headers Else remove header for token */\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import uuid from 'uuid/v4';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType) => (dispatch) => {\n  const id = uuid();\n\n  dispatch({ type: SET_ALERT, payload: { msg, alertType, id } });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n};\n","import axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setAlert } from './alert';\n\n// import constants\nimport {\n  SIGNUP,\n  GET_TEST,\n  VALIDATION_ERROR,\n  USER_LOADED,\n  GET_AUTH,\n  AUTH_ERROR,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ACCOUNT,\n  ACCOUNT_DELETED,\n} from './types';\n\n// const url = 'http://localhost:5000';\nconst url = '';\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const response = await axios.get(`${url}/api/auth`);\n\n    dispatch({ type: GET_AUTH, payload: response.data });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  try {\n    const config = { headers: { 'Content-Type': 'Application/json' } };\n\n    const body = JSON.stringify({ name, email, password });\n\n    const response = await axios.post(`${url}/api/users`, body, config);\n\n    dispatch({ type: REGISTER_SUCCESS, payload: response.data });\n\n    // load user after register\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({ type: REGISTER_FAIL });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    const config = { headers: { 'Content-Type': 'Application/json' } };\n\n    const body = JSON.stringify({ email, password });\n\n    const response = await axios.post(`${url}/api/auth`, body, config);\n\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data });\n\n    // load user after login\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({ type: LOGIN_FAIL });\n  }\n};\n\n// Logout / clear profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n\n// post signup\nexport const postSignup = (data, history) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(`${url}/api/users`, data, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      dispatch({ type: GET_TEST, payload: { data: 'succeess' } });\n      dispatch({ type: VALIDATION_ERROR, payload: { errors: null } });\n\n      // store in local storage\n      localStorage.setItem('jwt', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n\n      // redirect to profile\n      history.push('/profile');\n\n      // Success 🎉\n    } catch (error) {\n      //   console.error(error.message);\n\n      // validation errors\n      if (error.response && error.response.data.errors) {\n        console.error(error.response.data.errors);\n        dispatch({\n          type: VALIDATION_ERROR,\n          payload: { errors: error.response.data.errors },\n        });\n      }\n    }\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loggedInUserId } from '../../helper';\n\nimport { logout } from '../../redux/action/auth';\n\nconst Navbar = ({ auth, logout }) => {\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <a href='index.html'>\n          <i className='fas fa-code'></i> DevConnector\n        </a>\n      </h1>\n      <ul>\n        <li>\n          <Link to='/'>Developers</Link>\n        </li>\n\n        <li>\n          <Link to='/profiles'>Profiles</Link>\n        </li>\n\n        {/* Posts */}\n        <li>\n          <Link to='/posts'>Posts</Link>\n        </li>\n\n        {/* Dashboard */}\n        {auth.isAuthenticated && (\n          <li>\n            <Link to='/dashboard'>Dashboard</Link>\n          </li>\n        )}\n\n        {/* Register */}\n        {auth.isAuthenticated === false && (\n          <li>\n            <Link to='/register'>Sign Up</Link>\n          </li>\n        )}\n\n        {/* Login */}\n        {auth.isAuthenticated === false && (\n          <li>\n            <Link to='/login'>Login</Link>\n          </li>\n        )}\n\n        {/* Logout */}\n        {auth.isAuthenticated && (\n          <li>\n            <Link to='#' onClick={(e) => logout()}>\n              Logout\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n});\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Developer Connector</h1>\n          <p className='lead'>\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;\n","import React, { useState } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'react-bootstrap';\n\nimport { login } from '../../redux/action/auth';\nimport { setAlert } from '../../redux/action/alert';\n\nimport PropTypes from 'prop-types';\n\nimport DisplayValidation from '../DisplayValidation';\n\nconst Login = ({ login, history, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: 'upadesh.ng@gmail.com',\n    password: '123456',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(email, password, history);\n  };\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <>\n      {/* <DisplayValidation validationErrors={this.props.validationData} /> */}\n\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            minLength='6'\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n\n        <Button\n          className='btn btn-primary submit-btn'\n          onClick={(e) => onSubmit(e)}\n        >\n          Login\n        </Button>\n      </form>\n      <p className='my-1'>\n        Create an account{' '}\n        <Link to='/register' className='login-link'>\n          Sign Up\n        </Link>\n      </p>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.authReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(withRouter(Login));\n","import React, { Component } from 'react';\n\nexport default class ValidationError extends Component {\n  render() {\n    const validationErrors = this.props.validationErrors;\n\n    if (!validationErrors || !validationErrors.errors) {\n      return <></>;\n    }\n\n    console.log('eerr', validationErrors.errors);\n    return (\n      <>\n        {validationErrors.errors.map((item, index) => {\n          return (\n            <>\n              <ul className='error-message'>\n                <li className='error'>{item.msg}</li>\n              </ul>\n            </>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'react-bootstrap';\n\nimport { register } from '../../redux/action/auth';\nimport { setAlert } from '../../redux/action/alert';\nimport PropTypes from 'prop-types';\n\nimport DisplayValidation from '../DisplayValidation';\n\nconst Register = ({ setAlert, register, history, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('password do not match', 'danger');\n    } else {\n      register({ name, email, password }, history);\n    }\n  };\n\n  // Redirect to Dashboard after register\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <>\n      {/* <DisplayValidation validationErrors={this.props.validationData} /> */}\n\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form\n        className='form'\n        action='create-profile.html'\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            minLength='6'\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            minLength='6'\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n\n        <Button\n          className='btn btn-primary submit-btn'\n          onClick={(e) => onSubmit(e)}\n        >\n          Register\n        </Button>\n      </form>\n      <p className='my-1'>\n        Already have an account?\n        <Link to='/login' className='login-link'>\n          Sign In\n        </Link>\n      </p>\n    </>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  validationData: state.authReducer.validationData,\n  isAuthenticated: state.authReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register, setAlert })(\n  withRouter(Register)\n);\n","import axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  GET_EDUCATION,\n  EDUCATION_ERROR,\n  EXPERIENCE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_ACCOUNT,\n  ACCOUNT_DELETED,\n  GET_EXPERIENCE,\n  GET_ALL_PROFILES,\n  GET_GITHUB,\n  GITHUB_ERROR,\n  GET_ALL_POSTS,\n  POST_ERROR,\n} from './types';\n\nconst url = '';\n\nexport const getAllPosts = () => async (dispatch) => {\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(`${url}/api/post`, config);\n\n    // dispatch\n    dispatch({ type: GET_ALL_POSTS, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getGithubRepo = (githubusername) => async (dispatch) => {\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(\n      `${url}/api/profile/github/${githubusername}`,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: GET_GITHUB, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: GITHUB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getProfileByUserId = (id) => async (dispatch) => {\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(`${url}/api/profile/user/${id}`, config);\n\n    // dispatch\n    dispatch({ type: GET_PROFILE, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getAllProfiles = () => async (dispatch) => {\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(`${url}/api/profile`, config);\n\n    // dispatch\n    dispatch({ type: GET_ALL_PROFILES, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteAccount = () => async (dispatch) => {\n  if (!window.confirm('Are you sure? This can not be undone!')) return;\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.delete(`${url}/api/profile`, config);\n\n    // dispatch\n    dispatch({ type: CLEAR_ACCOUNT });\n    dispatch({ type: ACCOUNT_DELETED });\n\n    // alert success\n    dispatch(setAlert('Your account has been permanently deleted'));\n  } catch (err) {\n    // dispatch\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  if (!window.confirm('Are you sure?')) return;\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.delete(\n      `${url}/api/profile/education/${id}`,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: UPDATE_PROFILE, payload: response.data });\n\n    // alert success\n    dispatch(setAlert('Education removed', 'success'));\n  } catch (err) {\n    // dispatch\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  if (!window.confirm('Are you sure?')) return;\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.delete(\n      `${url}/api/profile/experience/${id}`,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: UPDATE_PROFILE, payload: response.data });\n\n    // alert success\n    dispatch(setAlert('Experience removed', 'success'));\n  } catch (err) {\n    // dispatch\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // put\n    const response = await axios.put(\n      `${url}/api/profile/experience`,\n      formData,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: GET_EXPERIENCE, payload: response.data });\n\n    // redirect\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    // error alert\n    if (errors) {\n      errors.filter((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    // dispatch\n    dispatch({\n      type: EXPERIENCE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // put\n    const response = await axios.put(\n      `${url}/api/profile/education`,\n      formData,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: GET_EDUCATION, payload: response.data });\n\n    // redirect\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: EDUCATION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // post\n    const response = await axios.post(`${url}/api/profile`, formData, config);\n\n    // dispatch\n    dispatch({ type: GET_PROFILE, payload: response.data });\n\n    // redirect\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const config = { headers: { 'Content-Type': 'Application/json' } };\n\n    const response = await axios.get(`${url}/api/profile/me`, config);\n\n    console.log('reppp prof', response);\n    dispatch({ type: GET_PROFILE, payload: response.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// export const getProfile = (id) => {\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(`${url}/api/profile/user/${id}`, '', {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       dispatch({ type: GET_PROFILE, payload: response.data });\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status },\n//       });\n//     }\n//   };\n// };\n\nexport const updateBasicProfile = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(`${url}/api/profile`, data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      dispatch({ type: GET_PROFILE, payload: response.data });\n    } catch (error) {}\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nfunction Top({ profile }) {\n  if (!profile) return <></>;\n\n  const user = profile.user;\n\n  return (\n    <>\n      <div class='profile-about bg-light p-2'>\n        <h2 class='text-primary'>{user.name} Bio</h2>\n        <p>{profile.bio}</p>\n        <div class='line'></div>\n        <h2 class='text-primary'>Skill Set</h2>\n        <div class='skills'>\n          {profile.skills.map((skill, index) => (\n            <div key={index} class='p-1'>\n              <i className='fa fa-check'></i> {skill}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps)(Top);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nfunction About({ profile }) {\n  if (!profile) return <></>;\n\n  const user = profile.user;\n\n  return (\n    <>\n      <div class='profile-top bg-primary p-2'>\n        <img class='round-img my-1' src={user.avatar} alt='' />\n        <h1 class='large'>{user.name}</h1>\n        <p class='lead'>Developer at Microsoft</p>\n        <p>{profile.location}</p>\n        <div class='icons my-1'>\n          <a href={profile.website} target='_blank' rel='noopener noreferrer'>\n            <i class='fas fa-globe fa-2x'></i>\n          </a>\n          <a\n            href={profile.social.twitter}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i class='fab fa-twitter fa-2x'></i>\n          </a>\n          <a\n            href={profile.social.facebook}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i class='fab fa-facebook fa-2x'></i>\n          </a>\n          <a\n            href={profile.social.linkedin}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i class='fab fa-linkedin fa-2x'></i>\n          </a>\n          <a\n            href={profile.social.youtube}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i class='fab fa-youtube fa-2x'></i>\n          </a>\n          <a\n            href={profile.social.instagram}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i class='fab fa-instagram fa-2x'></i>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nfunction Education({ profile }) {\n  if (!profile) return <></>;\n\n  const educationList = profile.education;\n\n  return (\n    <>\n      <div class='profile-edu bg-white p-2'>\n        <h2 class='text-primary'>Education</h2>\n\n        {educationList.map((education, index) => (\n          <div key={index}>\n            <h3>{education.school}</h3>\n            <p>\n              {education.from} - {education.to}\n            </p>\n            <p>\n              <strong>Degree: </strong>\n              {education.degree}\n            </p>\n            <p>\n              <strong>Field Of Study: </strong>\n              {education.fieldofstudy}\n            </p>\n            <p>\n              <strong>Description: </strong>\n              {education.description}\n            </p>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nEducation.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps)(Education);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nfunction Experience({ profile }) {\n  if (!profile) return <></>;\n\n  const experienceList = profile.experience;\n\n  return (\n    <>\n      <div class='profile-exp bg-white p-2'>\n        <h2 class='text-primary'>Experience</h2>\n\n        {experienceList.map((experience, index) => (\n          <div>\n            <h3 class='text-dark'>{experience.company}</h3>\n            <p>\n              {experience.from}- {experience.to}\n            </p>\n            <p>\n              <strong>Position: </strong>Senior Developer\n            </p>\n            <p>\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\n              asperiores modi quidem expedita fugit.\n            </p>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nExperience.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps)(Experience);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getGithubRepo } from '../../../redux/action/profile';\n\nfunction GithubRepo({ githubusername, getGithubRepo, github }) {\n  useEffect(() => {\n    getGithubRepo(githubusername);\n  }, []);\n\n  if (!github) return <></>;\n\n  return (\n    <>\n      <div class='profile-github'>\n        <h2 class='text-primary my-1'>\n          <i class='fab fa-github'></i> Github Repos\n        </h2>\n\n        {github.map((repo, index) => (\n          <div key={index} class='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li class='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li class='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li class='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nGithubRepo.propTypes = {\n  getGithubRepo: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  github: state.profileReducer.github,\n});\nexport default connect(mapStateToProps, { getGithubRepo })(GithubRepo);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getProfileByUserId } from '../../../redux/action/profile';\n\nimport Top from './top';\nimport About from './about';\nimport Education from './education';\nimport Experience from './experience';\nimport GithubRepo from './githubRepo';\nimport { Link } from 'react-router-dom';\n\nconst View = ({ getProfileByUserId, profile, match }) => {\n  useEffect(() => {\n    getProfileByUserId(match.params.id);\n  }, []);\n\n  return (\n    <>\n      <Link to='/profiles' className='btn btn-light'>\n        Back To Profiles\n      </Link>\n      <div class='profile-grid my-1'>\n        {/* Top */}\n        <Top />\n\n        {/* About */}\n\n        {profile && profile.social && <About />}\n\n        {/* education */}\n        <Education />\n\n        {/* experience */}\n        <Experience />\n\n        {/* githubRepo */}\n\n        {profile && profile.githubusername && (\n          <GithubRepo githubusername={profile.githubusername} />\n        )}\n      </div>\n    </>\n  );\n};\n\nView.propTypes = {\n  getProfileByUserId: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps, { getProfileByUserId })(View);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { loggedInUserId } from '../../../helper';\nimport { createProfile } from '../../../redux/action/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            onClick={(e) => toggleSocialInputs(!displaySocialInputs)}\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n\n        <Link to='/dashboard' className='btn btn-light my-1'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nCreateProfile.propTypes = {};\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.data,\n});\n\nexport default connect(mapStateToProps, { createProfile })(\n  withRouter(CreateProfile)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  getCurrentProfile,\n  createProfile,\n} from '../../../redux/action/profile';\n\nimport { Button } from 'react-bootstrap';\n\nfunction Edit({\n  getCurrentProfile,\n  createProfile,\n  profile: { profile, loading },\n  auth: { user },\n  history,\n}) {\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: profile && profile.company,\n      website: profile && profile.website,\n      location: profile && profile.location,\n      status: profile && profile.status,\n      skills: profile && profile.skills ? profile.skills.join(',') : '',\n      githubusername: profile && profile.githubusername,\n      bio: profile && profile.bio,\n      twitter: profile && profile.social.twitter,\n      facebook: profile && profile.social.facebook,\n      linkedin: profile && profile.social.linkedin,\n      youtube: profile && profile.social.youtube,\n      instagram: profile && profile.social.instagram,\n    });\n  }, [loading]);\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <>\n      <h1 class='large text-primary'>Dashboard</h1>\n      <p class='lead'>\n        <i class='fas fa-user'></i> Welcome {user && user.name}\n      </p>\n\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            onClick={(e) => toggleSocialInputs(!displaySocialInputs)}\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </>\n        )}\n\n        <Button className='btn btn-primary my-1' onClick={(e) => onSubmit(e)}>\n          Submit\n        </Button>\n\n        <Link to='/dashboard' className='btn btn-light my-1'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n}\n\nEdit.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  createProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n  profile: state.profileReducer,\n});\nexport default connect(mapStateToProps, { getCurrentProfile, createProfile })(\n  withRouter(Edit)\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../../redux/action/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const [toDateDisabled, toggleDisableed] = useState(false);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <>\n      <h1 class='large text-primary'>Add Your Education</h1>\n      <p class='lead'>\n        <i class='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={(e) => onSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Field Of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisableed(!toDateDisabled);\n              }}\n            />{' '}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input\n          type='submit'\n          class='btn btn-primary my-1'\n          onSubmit={(e) => onSubmit(e)}\n        />\n\n        <Link to='/dashboard' className='btn btn-light my-1'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../../redux/action/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    company: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const { title, company, location, from, to, current, description } = formData;\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return (\n    <>\n      <h1 class='large text-primary'>Add An Experience</h1>\n      <p class='lead'>\n        <i class='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={(e) => handleSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={(e) => handleChange(e)}\n          ></textarea>\n        </div>\n        <input\n          type='submit'\n          class='btn btn-primary my-1'\n          onSubmit={(e) => handleSubmit(e)}\n        />\n\n        <Link to='/dashboard' className='btn btn-light my-1'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\naddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../redux/action/profile';\n\nconst ProfileListing = ({ getAllProfiles, profileListing }) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, []);\n\n  if (!profileListing) return <>Loading..</>;\n\n  return (\n    <>\n      <h1 class='large text-primary'>Developers</h1>\n      <p class='lead'>\n        <i class='fab fa-connectdevelop'></i> Browse and connect with developers\n      </p>\n      <div class='profiles'>\n        {profileListing.map((profile) => (\n          <>\n            <div class='profile bg-light'>\n              <img class='round-img' src={profile.user.avatar} alt='' />\n              <div>\n                <h2>{profile.user.name}</h2>\n                <p>{profile.bio}</p>\n                <p>{profile.location}</p>\n\n                <Link\n                  to={`/profile/${profile.user._id}`}\n                  className='btn btn-primary'\n                >\n                  View profile\n                </Link>\n              </div>\n\n              <ul>\n                {profile.skills.map((skill, index) => (\n                  <li key={index} class='text-primary'>\n                    <i class='fas fa-check'></i> {skill}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </>\n        ))}\n      </div>\n    </>\n  );\n};\n\n// ProfileListing.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  profileListing: state.profileReducer.profileListing,\n});\n\nexport default connect(mapStateToProps, { getAllProfiles })(ProfileListing);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport post from '../../redux/reducer/post';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst PostListing = ({ posts }) => {\n  if (!posts) return <></>;\n\n  return (\n    <>\n      <div class='posts'>\n        {posts.map((post) => (\n          <div class='post bg-white p-1 my-1'>\n            <div>\n              <Link to={`/post/${post._id}`}>\n                <img class='round-img' src={post.avatar} alt='' />\n                <h4>{post.name}</h4>\n              </Link>\n            </div>\n            <div>\n              <p class='my-1'>{post.text}</p>\n\n              <p class='post-date'>\n                Posted on <Moment format='YYYY/MM/DD'>{post.date}</Moment>\n              </p>\n\n              <button type='button' class='btn btn-light'>\n                <i class='fas fa-thumbs-up'></i>\n\n                <span>\n                  {post.likes.length > 0 && <span>post.likes.length</span>}\n                </span>\n              </button>\n              <button type='button' class='btn btn-light'>\n                <i class='fas fa-thumbs-down'></i>\n              </button>\n\n              <Link to={`/post/${post._id}`} className='btn btn-primary'>\n                Discussion{' '}\n                <span class='comment-count'>{post.comments.length}</span>\n              </Link>\n\n              <button type='button' class='btn btn-danger'>\n                <i class='fas fa-times'></i>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nPostListing.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  posts: state.postReducer.posts,\n});\nexport default connect(mapStateToProps)(PostListing);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getAllPosts } from '../../redux/action/post';\nimport PostListing from './postListing';\n\nconst Posts = ({ posts, getAllPosts }) => {\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  return (\n    <>\n      <PostListing />\n    </>\n  );\n};\n\nPosts.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  posts: state.postReducer.posts,\n});\nexport default connect(mapStateToProps, { getAllPosts })(Posts);\n","import axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setAlert } from './alert';\n\nimport {\n  GET_POST,\n  GET_ALL_POSTS,\n  POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\nconst url = '';\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  if (!window.confirm('Are you sure?')) return;\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.delete(\n      `${url}/api/posts/comment/${postId}/${commentId}`\n    );\n\n    // dispatch\n    dispatch({ type: REMOVE_COMMENT, payload: commentId });\n\n    // alert\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.put(\n      `${url}/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    // dispatch\n    dispatch({ type: ADD_COMMENT, payload: response.data });\n\n    // alert\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getPost = (id) => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(`${url}/api/posts/${id}`, config);\n\n    // dispatch\n    dispatch({ type: GET_POST, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getAllPosts = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    // headers\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    // get\n    const response = await axios.get(`${url}/api/posts`, config);\n\n    // dispatch\n    dispatch({ type: GET_ALL_POSTS, payload: response.data });\n  } catch (err) {\n    // dispatch error\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addComment } from '../../redux/action/post';\n\nconst CommentForm = ({ postId, addComment, auth }) => {\n  const [text, setText] = useState('');\n  return (\n    <>\n      <div class='post-form'>\n        <div class='bg-primary p'>\n          <h3>Leave A Comment</h3>\n        </div>\n        <form\n          class='form my-1'\n          onSubmit={(e) => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText('');\n          }}\n        >\n          <textarea\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Comment on this post'\n            value={text}\n            disabled={auth && auth.isAuthenticated ? true : false}\n            onChange={(e) => setText(e.target.value)}\n          ></textarea>\n          <input\n            type='submit'\n            class='btn btn-dark my-1'\n            value='Submit'\n            disabled={auth && auth.isAuthenticated ? true : false}\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nCommentForm.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n  post: state.postReducer.post,\n});\nexport default connect(null, { addComment })(CommentForm);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getUserById } from '../../redux/action/user';\nimport { Link } from 'react-router-dom';\n\nconst Detail = ({ userId, user, post, getUserById }) => {\n  useEffect(() => {\n    getUserById(userId);\n  }, []);\n\n  if (!user) return <></>;\n\n  return (\n    <>\n      <div class='post bg-white p-1 my-1'>\n        <div>\n          <Link to={`/profile/${userId}`}>\n            <img class='round-img' src={user.avatar} alt='' />\n            <h4>{user.name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p class='my-1'>{post.text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nDetail.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  user: state.userReducer.user,\n  post: state.postReducer.post,\n});\nexport default connect(mapStateToProps, { getUserById })(Detail);\n","import axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { setAlert } from './alert';\n\nimport { GET_USER, USER_ERROR } from './types';\n\nconst url = '';\n\nexport const getUserById = (id) => async (dispatch) => {\n  try {\n    const response = await axios.get(`${url}/api/users/${id}`);\n\n    dispatch({ type: GET_USER, payload: response.data });\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../redux/action/post';\n\nfunction commentItem({ postId, comment, auth, user, deleteComment }) {\n  return (\n    <>\n      <div class='post bg-white p-1 my-1'>\n        <div>\n          <Link to={`/user/${comment.user}`}>\n            <img class='round-img' src={comment.avatar} alt='' />\n            <h4>{comment.name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p class='my-1'>{comment.text}</p>\n          <p class='post-date'>\n            Posted on <Moment format='YYYY-MM-DD'>{comment.date}</Moment>\n          </p>\n\n          <button\n            type='button'\n            class='btn btn-danger'\n            style={user && user._id === comment.user ? {} : { display: 'none' }}\n            onClick={(e) => deleteComment(postId, comment._id)}\n          >\n            <i class='fas fa-times'></i>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\ncommentItem.propTypes = {\n  comment: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n  user: state.authReducer.user,\n});\nexport default connect(mapStateToProps, { deleteComment })(commentItem);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CommentForm from './commentForm';\n\nimport { connect } from 'react-redux';\nimport { getPost } from '../../redux/action/post';\n\nimport Detail from './detail';\nimport { Link } from 'react-router-dom';\nimport CommentItem from './commentItem';\n\nconst View = ({ post, getPost, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, []);\n\n  if (post === null) return <>Loading..</>;\n\n  return (\n    <>\n      <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n\n      {post && post.user && <Detail userId={post.user} />}\n      {post && post._id && <CommentForm postId={post._id} />}\n\n      <div class='comments'>\n        {post.comments.map((comment) => {\n          return <CommentItem postId={post._id} comment={comment} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nView.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  post: state.postReducer.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(View);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alertReducer,\n});\nexport default connect(mapStateToProps, {})(Alert);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst LinkAction = (props) => {\n  return (\n    <>\n      <div class='dash-buttons'>\n        <Link to='/profile/edit' className='btn btn-light'>\n          <i className='fas fa-user-circle text-primary'></i> Edit Profile\n        </Link>\n\n        <Link to='/profile/add-experience' className='btn btn-light'>\n          <i className='fab fa-black-tie text-primary'></i> Add Experience\n        </Link>\n\n        <Link to='/profile/add-education' className='btn btn-light'>\n          <i className='fab fa-graduation-cap text-primary'></i> Add Education\n        </Link>\n      </div>\n    </>\n  );\n};\n\nLinkAction.propTypes = {};\n\nexport default LinkAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteExperience } from '../../../redux/action/profile';\n\nconst ListExperience = ({ profile, deleteExperience }) => {\n  if (!profile.experience) return <></>;\n\n  return (\n    <>\n      <h2 class='my-2'>Experience Credentials</h2>\n      <table class='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th class='hide-sm'>Title</th>\n            <th class='hide-sm'>Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {profile.experience.map((experience) => (\n            <tr>\n              <td>{experience.company}</td>\n              <td class='hide-sm'>{experience.title}</td>\n              <td class='hide-sm'>\n                <Moment format='YYYY/MM/DD'>{experience.from}</Moment> -{' '}\n                {experience.to === null ? (\n                  ' Now'\n                ) : (\n                  <Moment format='YYYY/MM/DD'>{experience.to}</Moment>\n                )}\n              </td>\n              <td>\n                <button\n                  class='btn btn-danger'\n                  onClick={() => deleteExperience(experience._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nListExperience.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n  deleteExperience: PropTypes.func.isRequired,\n});\nexport default connect(mapStateToProps, { deleteExperience })(ListExperience);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\n\nimport { deleteEducation } from '../../../redux/action/profile';\n\nconst ListEducation = ({ profile, deleteEducation }) => {\n  if (!profile.education) return <></>;\n\n  return (\n    <>\n      <h2 class='my-2'>Education Credentials</h2>\n      <table class='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th class='hide-sm'>Degree</th>\n            <th class='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {profile.education.map((education) => (\n            <tr>\n              <td>{education.school}</td>\n              <td class='hide-sm'>{education.degree}</td>\n              <td class='hide-sm'>\n                <Moment format='YYYY/MM/DD'>{education.from}</Moment> -{' '}\n                {education.to === null ? (\n                  ' Now'\n                ) : (\n                  <Moment format='YYYY/MM/DD'>{education.to}</Moment>\n                )}\n              </td>\n              <td>\n                <button\n                  class='btn btn-danger'\n                  onClick={() => deleteEducation(education._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nListEducation.propTypes = {\n  deleteEducation: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps, { deleteEducation })(ListEducation);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\n// import { loadUser } from '../../redux/action/auth';\nimport { getCurrentProfile, deleteAccount } from '../../redux/action/profile';\n\nimport LinkAction from './linkAction';\nimport ListExperience from './listExperience';\nimport ListEducation from './listEducation';\n\nfunction Dashboard({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile,\n}) {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return (\n    <>\n      <h1 class='large text-primary'>Dashboard</h1>\n      <p class='lead'>\n        <i class='fas fa-user'></i> Welcome {user && user.name}\n      </p>\n\n      {profile !== null ? (\n        <>\n          <LinkAction />\n          <ListExperience />\n          <ListEducation />\n\n          <div class='my-2'>\n            <button class='btn btn-danger' onClick={(e) => deleteAccount()}>\n              <i class='fas fa-user-minus'></i>\n              Delete My Account\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/profile/create' className='btn btn-primary'>\n            Create Profile\n          </Link>\n        </>\n      )}\n    </>\n  );\n}\n\nDashboard.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n  profile: state.profileReducer.profile,\n});\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount,\n})(Dashboard);\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport store from '../redux/store';\nimport { connect } from 'react-redux';\n\nimport { ProtectedRoute } from './protectedRoute';\nimport { GuestRoute } from './guestRoute';\nimport Navbar from '../component/layout/Navbar';\nimport Landing from '../component/layout/Landing';\nimport Login from '../component/auth/Login';\nimport Register from '../component/auth/Register';\nimport Profile from '../features/profile/view';\nimport ProfileCreate from '../features/profile/create';\nimport ProfileEdit from '../features/profile/edit';\nimport ProfileAddEducation from '../features/profile/addEducation';\nimport ProfileAddExperience from '../features/profile/addExperience';\nimport ProfileListing from '../features/profiles';\nimport PostListing from '../features/posts';\nimport PostView from '../features/post';\nimport Alert from '../component/layout/Alert';\nimport Dashboard from '../features/dashboard';\n\nimport { loadUser } from '../redux/action/auth';\n\nconst Routing = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  // localStorage.removeItem('token');\n\n  return (\n    <div>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n\n          <section className='container'>\n            <Alert />\n\n            <Switch>\n              {/* <GuestRoute exact path='/register' component={Register} /> */}\n              {/* <GuestRoute exact path='/login' component={Login} /> */}\n\n              <ProtectedRoute exact path='/dashboard' component={Dashboard} />\n              <ProtectedRoute\n                exact\n                path='/profile/create'\n                component={ProfileCreate}\n              />\n\n              <ProtectedRoute\n                exact\n                path='/profile/edit'\n                component={ProfileEdit}\n              />\n\n              <ProtectedRoute\n                exact\n                path='/profile/add-education'\n                component={ProfileAddEducation}\n              />\n\n              <ProtectedRoute\n                exact\n                path='/profile/add-experience'\n                component={ProfileAddExperience}\n              />\n\n              <Route exact path='/posts' component={PostListing} />\n\n              <Route exact path='/profile/:id' component={Profile} />\n\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={ProfileListing} />\n              <Route exact path='/post/:id' component={PostView} />\n            </Switch>\n          </section>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default connect(null)(Routing);\n","import React from 'react';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Routing from './routes';\n// import { loadUser } from './component/auth/action';\n// import setAuthToken from './utils/setAuthToken';\n\n// if (localStorage.token) {\n// setAuthToken(localStorage.token);\n// }\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Routing />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}